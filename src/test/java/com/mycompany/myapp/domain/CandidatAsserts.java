package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CandidatAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatAllPropertiesEquals(Candidat expected, Candidat actual) {
        assertCandidatAutoGeneratedPropertiesEquals(expected, actual);
        assertCandidatAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatAllUpdatablePropertiesEquals(Candidat expected, Candidat actual) {
        assertCandidatUpdatableFieldsEquals(expected, actual);
        assertCandidatUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatAutoGeneratedPropertiesEquals(Candidat expected, Candidat actual) {
        assertThat(actual)
            .as("Verify Candidat auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatUpdatableFieldsEquals(Candidat expected, Candidat actual) {
        assertThat(actual)
            .as("Verify Candidat relevant properties")
            .satisfies(a -> assertThat(a.getTelephone()).as("check telephone").isEqualTo(expected.getTelephone()))
            .satisfies(a -> assertThat(a.getAdresse()).as("check adresse").isEqualTo(expected.getAdresse()))
            .satisfies(a -> assertThat(a.getCv()).as("check cv").isEqualTo(expected.getCv()))
            .satisfies(a -> assertThat(a.getCvContentType()).as("check cv contenty type").isEqualTo(expected.getCvContentType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCandidatUpdatableRelationshipsEquals(Candidat expected, Candidat actual) {
        // empty method
    }
}
